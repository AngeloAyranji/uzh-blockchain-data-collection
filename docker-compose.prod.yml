version: "3.9"
services:
  kafka:
    environment:
      - KAFKA_LOG_RETENTION_BYTES=16777216 # 16 MB

  # Updated network settings for data producers and consumers
  data_producer_eth:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/eth.json --worker-type producer"

  data_producer_etc:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/etc.json --worker-type producer"

  data_producer_bsc:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/bsc.json --worker-type producer"

  data_consumer_eth:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/eth.json --worker-type consumer"
    deploy:
      replicas: ${N_CONSUMERS}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  data_consumer_etc:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/etc.json --worker-type consumer"
    deploy:
      replicas: ${N_CONSUMERS}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  data_consumer_bsc:
    command: bash -c "bash wait-for-kafka.sh && python3 -m app.main --cfg etc/cfg/prod/bsc.json --worker-type consumer"
    deploy:
      replicas: ${N_CONSUMERS}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
